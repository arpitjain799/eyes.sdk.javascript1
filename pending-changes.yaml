Apollo SDK:
  feature:
    - Support including humans when launching to the moon
    - Better probability of successful landing
    - internal
  bug-fix:
    - Avoid consuming all oxygen during takeoff
    - Remove kitchen to accommodate space for PlayStation
    - |
      An example of how to inline `markdown code highlights`
"@applitools/core":
  feature:
    - 
  bug-fix:
    - 
"@applitools/eyes-selenium":
  feature:
    - Added `Resize` value to `StitchMode` enum
  bug-fix:
    - 
"@applitools/eyes-webdriverio":
  feature:
    - 
  bug-fix:
    - 
"@applitools/eyes-playwright":
  feature:
    - 
  bug-fix:
    - 
"@applitools/eyes-puppeteer":
  feature:
    - 
  bug-fix:
    - 
"@applitools/eyes-testcafe":
  feature:
    - Added new selector extensions `child` and `fallback`
    - Using `lazyLoad.waitingTime` as a delay between stitches by default
    - Added `Sony Xperia 10 II` emulation device
    - Added `iPhone 14`  and `iPhone 14 Pro Max` ios devices
    - Deprecated "Content" match level value in favor of "IgnoreColors"
    - Added new iOS device - 'iPad Pro (11-inch) (4th generation)'
    - Use user agent metadata to improve browser environment detection logic
    - Use APPLITOOLS_CONCURRENCY env variable to specify concurrency
    - Added `ignoreColors` method to `CheckSettings` to set a match level
    - Additional internal event logs
    - Add NML support for Android
    - Crop screenshot image base on account info
  bug-fix:
    - Fixed incorrect calculation of the target element position.
    - Handle fake shadowRoot with UFG
    - Handed error during polling in long requests to eyes server
"@applitools/eyes-nightwatch":
  feature:
    - Added `Resize` value to `StitchMode` enum
  bug-fix:
    - 
"@applitools/eyes-cypress":
  feature:
    - Crop screenshot image base on account info
  bug-fix:
    - 
"@applitools/eyes-storybook":
  feature:
    - 
  bug-fix:
    - 
"@applitools/eyes-webdriverio5-service":
  feature:
    - Added new selector extensions `child` and `fallback`
    - Support UFG for native mobile
    - Drop support for Node.js versions <=12
    - Added support for taking full screenshots of elements that are scroll by pages only
    - Allowed `` values in custom properties
    - Add special attribute for pseudo elements
    - Add the ability for the SDK to lazy load the page prior to performing a check window
    - Support `addMobileDevice` in user API for NMG
    - Add support for dynamic coded regions
    - Don't fail `eyes.open` when there is a failure to set viewport size in `UFG`.
    - Using `lazyLoad.waitingTime` as a delay between stitches by default
    - Deprecated "Content" match level value in favor of "IgnoreColors"
    - Drop support for Android 9 and Android 10 specific devices
    - Added new iOS device - 'iPad Pro (11-inch) (4th generation)'
    - Use user agent metadata to improve browser environment detection logic
    - Additional internal event logs
    - Crop screenshot image base on account info
  bug-fix:
    - |
      `extractText` now supports regions that don't use hints while using `x`/`y` coordinates
    - Fixed check region fully in classic execution when using CSS stitching
    - Support data urls in iframes
    - Allow running with self-signed certificates
    - Fixed handling of navigation bar size on various devices
    - Fixed bug when navigation bar was presented in screenshot on Android 12
    - Added support for drivers that return screenshots in jpeg format
    - Fixed incorrect calculation of coded regions in classic mode when using CSS stitching
    - Fix rounding error of image size when scaling introduces fractions
    - Fixed the "Maximum Call Stack Size Exceeded" error when taking screenshots on iOS Safari
    - Fixed an issue with wrong cropped screenshots of elements out of viewport bounds on native devices
    - |
      Fixed `forceFullPageScreenshot` option behavior
    - |
      Fix calling `waitBeforeCapture` when failed to set required viewport size
    - Fix rendering issues with Salesforce Lightning design system
    - Fix issue that prevented self-signed certificates from working when connecting through a proxy server
    - Fixed native screenshots of the elements under large collapsing areas
    - Fixed scrolling on some android devices
    - Improved handling of touch padding related issues in native apps
    - Prevented navbar from appearing on Android 12 screenshots
    - Fixed various issues during taking screenshots in landscape orientation on some native devices
    - Avoided unexpected touch actions during `check` on Android apps
    - Better support in DOM slot element
    - Fixed some issues with helper library usage
    - Fixed the issue with screenshots being taken on chrome-emulated devices
    - Handle fake shadowRoot with UFG
"@applitools/eyes-browser-extension":
  feature:
    - Added new selector extensions `child` and `fallback`
    - Don't fail `eyes.open` when there is a failure to set viewport size in `UFG`.
    - Added support for taking full screenshots of elements that are scroll by pages only
    - Allowed `` values in custom properties
    - Add the ability for the SDK to lazy load the page prior to performing a check window
    - Using `lazyLoad.waitingTime` as a delay between stitches by default
    - Deprecated "Content" match level value in favor of "IgnoreColors"
    - Migrate to manifest V3
    - Added new iOS device - 'iPad Pro (11-inch) (4th generation)'
    - Use user agent metadata to improve browser environment detection logic
    - Add Test result readme
  bug-fix:
    - |
      `extractText` now supports regions that don't use hints while using `x`/`y` coordinates
    - Fixed check region fully in classic execution when using CSS stitching
    - Support data urls in iframes
    - Improve error message when failed to set viewport size
    - Fixed incorrect calculation of coded regions in classic mode when using CSS stitching
    - |
      Fixed `forceFullPageScreenshot` option behavior
    - Better support in DOM slot element
    - Fixed the issue with screenshots being taken on chrome-emulated devices
"@applitools/eyes-images":
  feature:
    - Added typescript support
    - Added `ignoreColors` method to `CheckSettings` to set a match level
    - Additional internal event logs
    - Crop screenshot image base on account info
    - Passing density metric for PPI support in the sdk
  bug-fix:
    - 
